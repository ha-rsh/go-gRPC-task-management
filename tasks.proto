syntax = "proto3";

option go_package = "src/go/tasks";

import "google/protobuf/timestamp.proto";

package tasks;

enum TaskStatus {
    TASK_STATUS_COMPLETED =0;
    TASK_STATUS_INCOMPLETE = 1;
    TASK_STATUS_STARTED = 2;
}

message Task {
    string id = 1;
    string description = 3;
    string user_id = 4;
    TaskStatus status = 5;
    google.protobuf.Timestamp deadline = 6;
    google.protobuf.Timestamp created_at = 7;
}

service TaskService {
    rpc CreateTask(CreateTaskRequest) returns (Task);

    rpc GetTask(GetTaskRequest) returns (Task);

    // server to client stream so the keyword 'stream' is placed with the returnn type.
    rpc ListTasks(ListTasksRequest) returns (stream Task);

    // client to server stream so the keyword 'stream' is placed with the request type.
    rpc RecordTasks(stream CreateTaskRequest) returns (TaskSummary);

    // bidirectional streaming
    rpc TaskChat(stream TaskComment) returns (stream TaskComment);
}

message CreateTaskRequest {
    string description = 1;
    string user_id = 2;
    google.protobuf.Timestamp deadline = 3;
}

message GetTaskRequest {
    string task_id = 1;
}

message ListTasksRequest {
    string user_id = 1;
    google.protobuf.Timestamp deadline = 2;
}

message TaskSummary {
    string no_of_tasks_created = 1;
}

message TaskComment {
    string task_id = 1;
    string user_id = 2;
    string comment = 3;
    google.protobuf.Timestamp created_at = 4;
}